Index: app/src/main/java/com/example/foody/viewmodels/RecipesViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.foody.viewmodels\n\nimport android.app.Application\nimport android.widget.Toast\nimport androidx.hilt.lifecycle.ViewModelInject\nimport androidx.lifecycle.AndroidViewModel\nimport androidx.lifecycle.asLiveData\nimport androidx.lifecycle.viewModelScope\nimport com.example.foody.data.DataStoreRepository\nimport com.example.foody.util.Constants.Companion.API_KEY\nimport com.example.foody.util.Constants.Companion.DEFAULT_DIET_TYPE\nimport com.example.foody.util.Constants.Companion.DEFAULT_MEAL_TYPE\nimport com.example.foody.util.Constants.Companion.DEFAULT_RECIPES_NUMBER\nimport com.example.foody.util.Constants.Companion.QUERY_ADD_RECIPE_INFORMATION\nimport com.example.foody.util.Constants.Companion.QUERY_API_KEY\nimport com.example.foody.util.Constants.Companion.QUERY_DIET\nimport com.example.foody.util.Constants.Companion.QUERY_FILL_INGREDIENTS\nimport com.example.foody.util.Constants.Companion.QUERY_NUMBER\nimport com.example.foody.util.Constants.Companion.QUERY_SEARCH\nimport com.example.foody.util.Constants.Companion.QUERY_TYPE\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.flow.collect\nimport kotlinx.coroutines.launch\n\nclass RecipesViewModel @ViewModelInject constructor(\n    application: Application,\n    private val dataStoreRepository: DataStoreRepository\n) : AndroidViewModel(application) {\n\n    private var mealType = DEFAULT_MEAL_TYPE\n    private var dietType = DEFAULT_DIET_TYPE\n\n    var networkStatus = false\n    var backOnline = false\n\n    val readMealAndDietType = dataStoreRepository.readMealAndDietType\n    val readBackOnline = dataStoreRepository.readBackOnline.asLiveData()\n\n    fun saveMealAndDietType(mealType: String, mealTypeId: Int, dietType: String, dietTypeId: Int) =\n        viewModelScope.launch(Dispatchers.IO) {\n            dataStoreRepository.saveMealAndDietType(mealType, mealTypeId, dietType, dietTypeId)\n        }\n\n    private fun saveBackOnline(backOnline: Boolean) =\n        viewModelScope.launch(Dispatchers.IO) {\n            dataStoreRepository.saveBackOnline(backOnline)\n        }\n\n    fun applyQueries(): HashMap<String, String> {\n        val queries: HashMap<String, String> = HashMap()\n\n        viewModelScope.launch {\n            readMealAndDietType.collect { value ->\n                mealType = value.selectedMealType\n                dietType = value.selectedDietType\n            }\n        }\n\n        queries[QUERY_NUMBER] = DEFAULT_RECIPES_NUMBER\n        queries[QUERY_API_KEY] = API_KEY\n        queries[QUERY_TYPE] = mealType\n        queries[QUERY_DIET] = dietType\n        queries[QUERY_ADD_RECIPE_INFORMATION] = \"true\"\n        queries[QUERY_FILL_INGREDIENTS] = \"true\"\n\n        return queries\n    }\n\n    fun applySearchQuery(searchQuery: String): HashMap<String, String> {\n        val queries: HashMap<String, String> = HashMap()\n        queries[QUERY_SEARCH] = searchQuery\n        queries[QUERY_NUMBER] = DEFAULT_RECIPES_NUMBER\n        queries[QUERY_API_KEY] = API_KEY\n        queries[QUERY_ADD_RECIPE_INFORMATION] = \"true\"\n        queries[QUERY_FILL_INGREDIENTS] = \"true\"\n        return queries\n    }\n\n    fun showNetworkStatus() {\n        if (!networkStatus) {\n            Toast.makeText(getApplication(), \"No Internet Connection.\", Toast.LENGTH_SHORT).show()\n            saveBackOnline(true)\n        } else if (networkStatus) {\n            if (backOnline) {\n                Toast.makeText(getApplication(), \"We're back online.\", Toast.LENGTH_SHORT).show()\n                saveBackOnline(false)\n            }\n        }\n    }\n\n}
===================================================================
diff --git a/app/src/main/java/com/example/foody/viewmodels/RecipesViewModel.kt b/app/src/main/java/com/example/foody/viewmodels/RecipesViewModel.kt
--- a/app/src/main/java/com/example/foody/viewmodels/RecipesViewModel.kt	
+++ b/app/src/main/java/com/example/foody/viewmodels/RecipesViewModel.kt	
@@ -55,9 +55,9 @@
                 dietType = value.selectedDietType
             }
         }
-
-        queries[QUERY_NUMBER] = DEFAULT_RECIPES_NUMBER
         queries[QUERY_API_KEY] = API_KEY
+
+        queries[QUERY_NUMBER] = DEFAULT_RECIPES_NUMBER
         queries[QUERY_TYPE] = mealType
         queries[QUERY_DIET] = dietType
         queries[QUERY_ADD_RECIPE_INFORMATION] = "true"
